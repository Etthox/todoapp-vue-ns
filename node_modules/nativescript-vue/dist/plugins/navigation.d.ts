import { Frame, NavigationEntry, Page } from '@nativescript/core';
import { App, Component, Ref } from '@vue/runtime-core';
import { NSVElement } from '../dom';
import { CreateNativeViewProps } from '../runtimeHelpers';
declare module '@vue/runtime-core' {
    interface ComponentCustomProperties {
        /**
         * todo: update docblock
         * Navigate to {target} component.
         *
         * The frame to navigate defaults to the topmost frame
         * @param target
         * @param options
         */
        $navigateTo: <P = any>(target: Component<P>, options?: NavigateToOptions<P>) => Page;
        $navigateBack: (options?: NavigateBackOptions) => void;
    }
}
type ResolvableFrame = string | Ref | NSVElement | Frame | undefined;
export type NavigateToOptions<P = any> = NavigationEntry & {
    props?: CreateNativeViewProps<P>;
    frame?: ResolvableFrame;
};
export type NavigateBackOptions = {
    frame?: ResolvableFrame;
};
/**
 * @internal
 */
export declare function install(app: App): void;
export declare function $navigateTo<P = any>(target: Component<P>, options?: NavigateToOptions<P>): Page;
export declare function $navigateBack(options?: NavigateBackOptions): Promise<void>;
export {};

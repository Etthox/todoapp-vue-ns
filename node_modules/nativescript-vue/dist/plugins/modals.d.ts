import { ShowModalOptions as CoreShowModalOptions, View } from '@nativescript/core';
import { App, Component, ComponentPublicInstance } from '@vue/runtime-core';
import { NSVElement } from '../dom';
import { CreateNativeViewProps } from '../runtimeHelpers';
declare module '@vue/runtime-core' {
    interface ComponentCustomProperties {
        $showModal: <T = any, P = any>(component: Component<P>, options?: ShowModalOptions<P, T>) => Promise<T | false | undefined>;
        $closeModal: <T = any>(data: T, ...args: any[]) => void;
        $modal: {
            close: <T = any>(data: T, ...args: any[]) => void;
        };
    }
}
type ResolvableModalTarget = ComponentPublicInstance | NSVElement | View;
export type ShowModalOptions<P = any, T = any> = Partial<Omit<CoreShowModalOptions, 'closeCallback'>> & {
    closeCallback?: (data?: T, ...args: any[]) => void;
    props?: CreateNativeViewProps<P>;
    target?: ResolvableModalTarget;
};
/**
 * @internal
 */
export declare function install(app: App): void;
export declare function $showModal<T = any, P = any>(component: Component<P>, options?: ShowModalOptions<P, T>): Promise<T | false | undefined>;
export {};

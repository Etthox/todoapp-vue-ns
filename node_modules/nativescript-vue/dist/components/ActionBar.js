import { Page as NSCPage, ActionBar as NSCActionBar, NavigationButton as NSCNavigationButton, ActionItem as NSCActionItem, } from '@nativescript/core';
import { defineComponent, h, warn } from '@vue/runtime-core';
import { registerElement } from '../registry';
registerElement('NSCActionBar', () => NSCActionBar, {
    viewFlags: 1 /* NSVViewFlags.SKIP_ADD_TO_DOM */,
    nodeOps: {
        insert(child, parent, atIndex) {
            const actionBar = parent.nativeView;
            const childView = child.nativeView;
            if (childView instanceof NSCNavigationButton) {
                actionBar.navigationButton = childView;
            }
            else if (childView instanceof NSCActionItem) {
                if (atIndex) {
                    const ai = actionBar.actionItems.getItems();
                    ai.splice(atIndex, 0, childView);
                    actionBar.actionItems.setItems(ai);
                }
                else {
                    actionBar.actionItems.addItem(childView);
                }
            }
            else {
                actionBar.titleView = childView;
            }
        },
        remove(child, parent) {
            const actionBar = parent.nativeView;
            const childView = child.nativeView;
            if (childView instanceof NSCNavigationButton) {
                if (actionBar.navigationButton === childView) {
                    actionBar.navigationButton = null;
                }
            }
            else if (childView instanceof NSCActionItem) {
                actionBar.actionItems.removeItem(childView);
            }
            else {
                if (actionBar.titleView === childView) {
                    actionBar.titleView = null;
                }
            }
        },
    },
});
export const ActionBar = /*#__PURE__*/ defineComponent({
    name: 'ActionBar',
    setup(props, ctx) {
        return () => {
            return h('NSCActionBar', {
                ...ctx.attrs,
                onVnodeMounted(vnode) {
                    const el = vnode.el;
                    const actionBar = el.nativeView;
                    const parent = el.parentNode;
                    if (parent.nativeView instanceof NSCPage) {
                        parent.nativeView.actionBar = actionBar;
                    }
                    else {
                        if (__DEV__) {
                            warn(`<ActionBar> must be a direct child of a <Page> element - ` +
                                `got <${parent.nativeView.constructor.name}> instead.`);
                        }
                    }
                },
            }, ctx.slots.default ? ctx.slots.default() : undefined);
        };
    },
});
//# sourceMappingURL=ActionBar.js.map
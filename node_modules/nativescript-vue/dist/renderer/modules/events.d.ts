import { NSVElement } from '../../dom';
import { ComponentInternalInstance } from '@vue/runtime-core';
interface Invoker extends EventListener {
    value: EventValue;
}
type EventValue = Function | Function[];
export declare function addEventListener(el: NSVElement, event: string, handler: EventListener, options?: EventListenerOptions): void;
export declare function removeEventListener(el: NSVElement, event: string, handler: EventListener, options?: EventListenerOptions): void;
export declare function patchEvent(el: NSVElement & {
    _vei?: Record<string, Invoker | undefined>;
}, rawName: string, prevValue: EventValue | null, nextValue: EventValue | null, instance?: ComponentInternalInstance | null): void;
export {};

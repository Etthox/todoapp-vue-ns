import { compile } from "@vue/compiler-dom";
import { warn } from "@vue/runtime-core";
import * as runtime from "./index";
const NOOP = () => { };
const compileCache = Object.create(null);
export function compileToFunction(template, options) {
    if (typeof template !== "string") {
        warn("invalid template option: ", template);
        return NOOP;
    }
    const key = template;
    const cached = compileCache[key];
    if (cached) {
        return cached;
    }
    const { code } = compile(template, {
        isNativeTag: (tag) => true,
        hoistStatic: true,
        prefixIdentifiers: true,
        onWarn(warn) {
            console.warn("Template Compile Warning", warn);
        },
        onError(err) {
            console.error("Template Compile Error", err);
        },
        ...options,
    });
    const render = new Function("Vue", code)(runtime);
    return (compileCache[key] = render);
}
export { compileToFunction as compile };
//# sourceMappingURL=compiler.js.map
{"version":3,"file":"nstudio-nativescript-checkbox-angular.mjs","sources":["../../../../../packages/nativescript-checkbox/angular/index.ts","../../../../../packages/nativescript-checkbox/angular/nstudio-nativescript-checkbox-angular.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject,\n  NgModule\n} from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { registerElement, BaseValueAccessor } from '@nativescript/angular';\nimport { View } from '@nativescript/core';\nimport { CheckBox } from '@nstudio/nativescript-checkbox';\n\nfunction convertToInt(value): number {\n  let normalizedValue;\n  if (value === undefined || value === null) {\n    normalizedValue = 0;\n  } else {\n    if (typeof value === 'number') {\n      normalizedValue = value;\n    } else {\n      const parsedValue = parseInt(value.toString(), 10);\n      normalizedValue = isNaN(parsedValue) ? 0 : parsedValue;\n    }\n  }\n  return Math.round(normalizedValue);\n}\n\nregisterElement('CheckBox', () => CheckBox);\n\nconst CHECKED_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckedValueAccessor),\n  multi: true\n};\n\nexport type CheckableView = { checked: boolean } & View;\n\n/**\n * The accessor for setting checked property and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <CheckBox [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n  selector:\n    'CheckBox[ngModel], CheckBox[formControlName], CheckBox[formControl], checkBox[ngModel], checkBox[formControlName], checkBox[formControl], check-box[ngModel], check-box[formControlName], check-box[formControl]',\n  providers: [CHECKED_VALUE_ACCESSOR]\n})\nexport class CheckedValueAccessor extends BaseValueAccessor<CheckableView> {\n  constructor(@Inject(ElementRef) elementRef: ElementRef) {\n    super(elementRef.nativeElement);\n  }\n\n  @HostListener('checkedChange', ['$event'])\n  public checkedChangeListener(event: any) {\n    this.onChange(event.value);\n  }\n\n  public onTouched = () => {};\n\n  public writeValue(value: any): void {\n    this.view.checked = value;\n  }\n\n  public registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n}\n\n@NgModule({\n  declarations: [CheckedValueAccessor],\n  providers: [],\n  imports: [FormsModule],\n  exports: [FormsModule, CheckedValueAccessor]\n})\nexport class TNSCheckBoxModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}